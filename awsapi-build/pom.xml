<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>io.cinderella</groupId>
    <artifactId>parent</artifactId>
    <version>1.0-SNAPSHOT</version>
    <relativePath>../parent/pom.xml</relativePath>
  </parent>

  <groupId>io.cinderella</groupId>
  <artifactId>awsapi-build</artifactId>
  <packaging>pom</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>Cinderella :: Install AWSAPI Into Maven Repo</name>
  <url>http://cinderella.github.org</url>

  <dependencies>
    <!--Control jclouds specific dependencies here.  These will be passed to the ant build-->
    <dependency>
      <groupId>org.jclouds.labs</groupId>
      <artifactId>vcloud-director</artifactId>
      <version>${jclouds.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jclouds</groupId>
      <artifactId>jclouds-core</artifactId>
      <version>${jclouds.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jclouds.driver</groupId>
      <artifactId>jclouds-enterprise</artifactId>
      <version>${jclouds.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jclouds.driver</groupId>
      <artifactId>jclouds-slf4j</artifactId>
      <version>${jclouds.version}</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.4</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
            <configuration>
              <classesDirectory>${awsapi.base}/target/classes/cloud-awsapi.jar</classesDirectory>
              <outputDirectory>${project.build.directory}</outputDirectory>
              <finalName>${project.build.finalName}</finalName>
              <excludes>
                <exclude>com/amazon/**</exclude>
              </excludes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <!-- Clean artifacts the ant way -->
          <execution>
            <id>clean-awsapi</id>
            <phase>clean</phase>
            <configuration>
              <target>
                <ant antfile="${awsapi.base}/build.xml">
                  <target name="clean-awsapi" />
                </ant>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
          <!-- Build the cloudbridge artifacts via the native ant build -->
          <execution>
            <id>compile-awsapi</id>
            <phase>generate-sources</phase>
            <configuration>
              <target>
                <ant antfile="${awsapi.base}/build.xml">
                  <property name="deps2.classpath" refid="maven.compile.classpath"/>
                  <reference refid="maven.compile.classpath" torefid="dist.classpath"  />
                  <target name="compile-awsapi" />
                </ant>

                <!--<jar jarfile="${project.build.directory}/cloud-awsapi.jar" basedir="${awsapi.base}/target/classes/cloud-awsapi.jar" excludes="/com/amazon/**" />-->
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- Install the cloudbridge artifacts into local Maven repo -->
      <plugin>
        <artifactId>maven-install-plugin</artifactId>
        <version>2.3.1</version>
        <executions>
          <execution>
            <id>install-awsapi</id>
            <phase>install</phase>
            <goals>
              <goal>install-file</goal>
            </goals>
            <configuration>
              <groupId>io.cinderella.cloudbridge</groupId>
              <artifactId>awsapi</artifactId>
              <version>4.0-SNAPSHOT</version>
              <packaging>jar</packaging>
              <file>${project.build.directory}/${project.build.finalName}.jar</file>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>jrebel</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.zeroturnaround</groupId>
            <artifactId>jrebel-maven-plugin</artifactId>
            <version>1.1.3</version>
            <configuration>
              <packaging>jar</packaging>
              <alwaysGenerate>true</alwaysGenerate>
              <addResourcesDirToRebelXml>true</addResourcesDirToRebelXml>
              <showGenerated>true</showGenerated>
              <rebelXmlDirectory>${awsapi.base}/target/classes/cloud-awsapi.jar</rebelXmlDirectory>
              <classesDirectory>${awsapi.base}/target/classes/cloud-awsapi.jar</classesDirectory>
            </configuration>
            <executions>
              <execution>
                <id>generate-rebel-xml</id>
                <phase>process-resources</phase>
                <goals>
                  <goal>generate</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <version>1.7</version>
            <executions>
              <execution>
                <id>add-source</id>
                <phase>generate-sources</phase>
                <goals>
                  <goal>add-source</goal>
                </goals>
                <configuration>
                  <sources>
                    <source>${awsapi.base}/awsapi/src</source>
                  </sources>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
